{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","exportObj","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cee24efe.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className = 'note'>\n      {note.content}\n      <button onClick = {toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst exportObj = {\n  getAll,\n  create,\n  update\n}\n\nexport default exportObj\n","import React from 'react'\n\nconst Notification = ({message}) => {\n  if(message === null) {\n    return null\n  }\n  return (\n    <div className = 'error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n      </div>\n    )\n}\n\nexport default Footer\n","import React, {useState, useEffect} from 'react'\nimport Note  from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        console.log('promise fulfilled')\n        setNotes(initialNotes)\n      })\n  }, [])\n    console.log('render', notes.length, 'notes')\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important : !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Note '${note.content}' was already removed from server`)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n      console.log(`importance of ${id} needs to be toggled`)\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n    <h1>Notes</h1>\n    <Notification message = {errorMessage}/>\n      <div>\n        <button onClick = {() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note key = {i} note = {note} toggleImportance = {() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit = {addNote}>\n      <input value = {newNote}\n          onChange = {handleNoteChange}\n      />\n      <button type = \"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}